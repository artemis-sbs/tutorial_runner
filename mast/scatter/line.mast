
===== edit_scatter_line ===== 

push client_common

gui_section(style=form_style)

gui_row(slider_row)
"""count"""
gui_slider("low: 1; high:100.0;", var="count")
gui_row(separator)
gui_blank()
gui_row(input_row)
s_x = "{x}"
gui_input("desc: start x", var="s_x")
s_y = "{y}"
gui_input("desc: start y", var="s_y")
s_z = "{z}"
gui_input("desc: start z", var="s_z")
gui_row(input_row)

s_w = "{w}"
gui_input("desc: end x", var="s_w")
s_h = "{h}"
gui_input("desc: end y", var="s_h")
s_d = "{d}"
gui_input("desc: end z", var="s_d")
gui_row(separator)
gui_blank()
gui_row(x_slider_row)

"""x rotation"""
gui_slider("low: 0; high:360.0;", var="ax")
gui_row(y_slider_row)
"""y rotation"""
gui_slider("low: 0; high:360.0;", var="ay")
gui_row(separator)
gui_blank()
gui_row(slider_row)
gui_checkbox("text: random;state: {rand}", var="rand")

await choice:
    * "Apply":
        x = int(s_x)
        y = int(s_y)
        z = int(s_z)
        w = int(s_w)

        jump apply_scatter_line
end_await
jump edit_scatter_line

==== apply_scatter_line ====
push clear_objects

for v in scatter_line(int(count), x,y,z, w, h, d, rand):
    o = terrain_spawn(v.x, v.y, v.z, None, None, "plain_asteroid_6", "behav_asteroid")
    objects.append(to_id(o))
next v
jump edit_scatter_line

