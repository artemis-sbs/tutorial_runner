#
# Show the proper GUI for server vs Client Consoles
#
# uncomment to see log messages
#logger

#
# This shows more complex interaction
# where a comms button changes the ui
# Simulating a modal dialog
#
route comms select comms_route
#
route change console select_console

if IS_SERVER:
    start_text = "This is a start project for mast"
    ->server_main
else:
    -> client_main
end_if


======= server_main =====


#
# Create the player ship so the clients see it
# This is a simple script that has one playable ship
#
simulation create
#delay gui 1s
shared artemis =  to_id(player_spawn(0,0,0, "Artemis", "tsn", "tsn_battle_cruiser"))
do assign_client_to_ship(0,artemis)
do set_face(artemis, random_terran())

section style="area:2,20,80,35;"

""" {start_text}"""

await choice:
    + "Start":
        -> start
end_await
-> server_main

======== start ======

# Create the world here

# Create a space station
shared ds1 = npc_spawn(1000,0,1000, "DS1", "tsn, Station", "starbase_command", "behav_station")
shared ds2 = npc_spawn(1000,0,-1000, "DS2", "tsn, Station", "starbase_command", "behav_station")
do set_face(ds1.id, random_terran())
do set_face(ds2.id, random_terran())

T001 = npc_spawn(-1000,0,-1000, "T001", "tsn", "tsn_battle_cruiser", "behav_npcship")
do set_face(T001.id, random_terran())

# Create an enemy
k001 = npc_spawn(-1000,0,1000, "K001", "raider", "kralien_dreadnaught", "behav_npcship")
simulation resume

await gui


====== client_main =======

#
# Default the console to helm
#
console_select = "helm"

====== select_console ======

section style="area:2,20,80,35;"

"""Select your console"""

section style="area: 85,50, 99,90;"
vradio console_select "helm,weapons, comms,science,engineering,mainscreen"
blank
row

button "accept":
    ->console_selected
end_button

await gui
->END

====== console_selected ====
do assign_client_to_ship(client_id,artemis)
# Maybe this could also be set_inventory_value
do set_inventory_value(client_id, "assigned_ship", artemis)

console console_select
await gui


================ comms_route ==================
#
# This label is called for a player ship (COMMS_ORIGIN_ID)
# and the COMMS_SELECTED_ID ship has not been communicated with
# this is used to resolve where to START the conversation with the TO ship
#
# COMMS_SELECTED_ID is the id of the target

if COMMS_SELECTED_ID == COMMS_ORIGIN_ID:
    # This is the same ship
    jump internal_comms
elif has_roles(COMMS_SELECTED_ID, 'tsn, Station'):
    jump comms_station
elif has_role(COMMS_SELECTED_ID, 'tsn'):
    jump comms_friendly
elif has_role(COMMS_SELECTED_ID, 'raider'):
     jump npc_comms
end_if
# Anything else has no comms buttons
# and static as the id
comms_info "static"

->END


====== internal_comms =====
-> END


===== comms_station =======
station_face = get_face(COMMS_SELECTED_ID)
plot_point = get_inventory_value(COMMS_SELECTED_ID, "plot_point", 0)

await comms:
    + "Hail":
        reroute client client_id station_story_route
end_await
->  comms_station

===== comms_friendly =======
station_face = get_face(COMMS_SELECTED_ID)

await comms:
    + "Give Orders":
        reroute client client_id friendly_give_orders
end_await
->  comms_friendly


====== station_story_route ======
comms_selected = get_inventory_value(client_id, "COMMS_SELECTED_ID", 0)
plot_point = get_inventory_value(comms_selected, "plot_point", 0)
ship = get_inventory_value(client_id, "assigned_ship")
player = to_object(ship)
if player:
    player_name = player.name
else:
    player_name = "Terran"
end_if



match plot_point:
    case 0:
        jump station_story_start
    case 1:
        jump station_story_one
    case 2:
        jump station_story_two
end_match

===== show_comms_again ==== 
comms_console = "comms"
console comms_console
await gui


==== station_story_start ======
comms_selected = get_inventory_value(client_id, "COMMS_SELECTED_ID", 0)
station_face = get_face(comms_selected)
section style="area:2,20,80,65;"

face station_face
"""
text: Hello {player_name} we  have been waiting for you.
you have a choice to make
"""

await choice:
   + "Choose One":
      do set_inventory_value(comms_selected, "first_choice", True)
   + "Choose Two":
      do set_inventory_value(comms_selected, "first_choice", False)
   + "RETURN to CONSOLE":
        jump console_selected
end_await


====== station_story_one ====
comms_selected = get_inventory_value(client_id, "COMMS_SELECTED_ID", 0)
station_face = get_face(comms_selected)
do set_inventory_value(comms_selected, "plot_point", 1)

face station_face
"""
Hello {player_name} I will remember that.
But how would you choose this.
"""


await choice:
   + "Choose One":
      do set_inventory_value(comms_selected, "second_choice", True)
   + "Choose Two":
      do set_inventory_value(comms_selected, "second_choice", False)
   + "RETURN to CONSOLE":
        jump console_selected
end_await


====== station_story_two ====
comms_selected = get_inventory_value(client_id, "COMMS_SELECTED_ID", 0)
station_face = get_face(comms_selected)
do set_inventory_value(comms_selected, "plot_point", 2)
first = get_inventory_value(comms_selected, "first_choice", False)
second = get_inventory_value(comms_selected, "second_choice", False)
first =  "One" if first else "Two"
second =  "One" if second else "Two"


face station_face
"""
Hello {player_name} you've made your choices.
I remember them:
    First {first}
    second {second}
"""

await choice:
   + "RETURN to CONSOLE":
        jump console_selected
end_await



==== friendly_give_orders ======
comms_selected = get_inventory_value(client_id, "COMMS_SELECTED_ID", 0)
station_face = get_face(comms_selected)
section style="area:2,20,80,65;"
ship = get_inventory_value(client_id, "assigned_ship")
player = to_object(ship)
if player:
    player_name = player.name
else:
    player_name = "Terran"
end_if


face station_face
"""
text: Hello {player_name} tell us what to do
"""

await choice:
   + "APPLY":
      do set_inventory_value(comms_selected, "first_choice", True)
   + "CANCEL":
        jump console_selected
end_await
jump console_selected



====== npc_comms =========
-> END